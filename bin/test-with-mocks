#!/usr/bin/env bash
set -e

# Colors for better output
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print messages with colors
print_message() {
  local color=$1
  local message=$2
  echo -e "${color}${message}${NC}"
}

# Function to print error messages and exit
error_exit() {
  print_message "${RED}" "ERROR: $1"
  exit 1
}

# Function to clean up Docker container
cleanup() {
  print_message "${BLUE}" "Cleaning up resources..."
  if [ -n "$STRIPE_MOCK_CONTAINER_ID" ]; then
    docker stop "$STRIPE_MOCK_CONTAINER_ID" > /dev/null 2>&1 || true
    docker rm "$STRIPE_MOCK_CONTAINER_ID" > /dev/null 2>&1 || true
    print_message "${GREEN}" "✓ Stripe mock container removed"
  fi
}

# Set up trap to clean up on exit
trap cleanup EXIT INT TERM

# Check if Docker is installed and running
if ! command -v docker &> /dev/null; then
  error_exit "Docker is not installed or not in PATH. Please install Docker first."
fi

if ! docker info &> /dev/null; then
  error_exit "Docker daemon is not running. Please start Docker first."
fi

# Print welcome message
print_message "${GREEN}" "
╔════════════════════════════════════════════════╗
║            Flexile Test With Mocks             ║
║     Run tests with Stripe & Wise API mocks     ║
╚════════════════════════════════════════════════╝"

# Start stripe-mock container
print_message "${BLUE}" "Starting stripe-mock container..."
STRIPE_MOCK_CONTAINER_ID=$(docker run -d -p 12111-12112:12111-12112 stripe/stripe-mock:latest)

if [ -z "$STRIPE_MOCK_CONTAINER_ID" ]; then
  error_exit "Failed to start stripe-mock container."
fi

print_message "${GREEN}" "✓ Started stripe-mock container: $STRIPE_MOCK_CONTAINER_ID"

# Wait for stripe-mock to be ready
print_message "${BLUE}" "Waiting for stripe-mock to be ready..."
max_attempts=10
attempt=1
while ! curl -s http://localhost:12111/v1/customers > /dev/null; do
  if [ $attempt -gt $max_attempts ]; then
    error_exit "stripe-mock failed to start after $max_attempts attempts."
  fi
  print_message "${YELLOW}" "  Waiting for stripe-mock to be ready (attempt $attempt/$max_attempts)..."
  sleep 1
  ((attempt++))
done

print_message "${GREEN}" "✓ stripe-mock is ready at http://localhost:12111"

# Prepare environment variables for testing
export USE_STRIPE_MOCK=true
export USE_WISE_MOCK=true
export STRIPE_MOCK_HOST=localhost
export STRIPE_MOCK_PORT=12111
export STRIPE_MOCK_PROTOCOL=http

# Change to the backend directory
cd "$(dirname "$0")/../backend" || error_exit "Could not change to backend directory."

# Parse command line arguments
TEST_FILES=""
if [ $# -gt 0 ]; then
  TEST_FILES="$*"
  print_message "${BLUE}" "Running specific tests: $TEST_FILES"
else
  print_message "${BLUE}" "Running all tests with mocks..."
fi

# Run the tests
print_message "${BLUE}" "Starting tests with Stripe & Wise mocks..."
print_message "${YELLOW}" "USE_STRIPE_MOCK=${USE_STRIPE_MOCK}"
print_message "${YELLOW}" "USE_WISE_MOCK=${USE_WISE_MOCK}"
print_message "${YELLOW}" "STRIPE_MOCK_HOST=${STRIPE_MOCK_HOST}"
print_message "${YELLOW}" "STRIPE_MOCK_PORT=${STRIPE_MOCK_PORT}"

if [ -z "$TEST_FILES" ]; then
  bundle exec rspec
else
  bundle exec rspec $TEST_FILES
fi

TEST_EXIT_CODE=$?

# Print results
if [ $TEST_EXIT_CODE -eq 0 ]; then
  print_message "${GREEN}" "
╔════════════════════════════════════════════════╗
║                Tests Passed! 🎉                ║
╚════════════════════════════════════════════════╝"
else
  print_message "${RED}" "
╔════════════════════════════════════════════════╗
║               Tests Failed! ❌                 ║
╚════════════════════════════════════════════════╝"
fi

print_message "${BLUE}" "
To run tests with mocks manually:

  1. Start stripe-mock:
     docker run -d -p 12111-12112:12111-12112 stripe/stripe-mock:latest

  2. Run tests with environment variables:
     USE_STRIPE_MOCK=true USE_WISE_MOCK=true bundle exec rspec

  3. Or use this script again:
     bin/test-with-mocks [specific_test_files]"

exit $TEST_EXIT_CODE
